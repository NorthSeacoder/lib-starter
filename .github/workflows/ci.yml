name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # 主要测试任务 - 只在 Ubuntu 上运行以节省 Actions 分钟数
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 合并所有检查到一个步骤，减少 Actions 开销
      - name: Run all checks
        run: |
          echo "🔍 Running lint check..."
          pnpm lint:check

          echo "🎨 Running format check..."
          pnpm format:check

          echo "📝 Running type check..."
          pnpm typecheck

          echo "🧪 Running tests with coverage..."
          pnpm test:coverage

          echo "🏗️ Running build..."
          pnpm build

      # 只在 Node.js 20 上运行的额外检查
      - name: Additional checks (Node.js 20 only)
        if: matrix.node-version == 20
        run: |
          echo "📦 Checking exports..."
          pnpm check-exports

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # 跨平台兼容性测试 - 仅在主分支运行以节省分钟数
  cross-platform:
    name: Cross-platform test
    if: github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 跨平台只运行核心测试
      - name: Run core tests
        run: |
          pnpm test
          pnpm build

  # 发布任务
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Release
        run: pnpm release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
